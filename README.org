#+title: Clojure Project

| [[https://bigv-portfolio.goatcounter.com/counter/bigv-portfolio//.html?no_branding=true&style=div%7Bbackground%3Ablack%3Bcolor%3Asandybrown%3Bborder%3Anone%7D%23gcvc-for%2C%23gcvc-views%7Bcolor%3Asandybrown%3B%7D][Home page views]] | [[https://bigv-portfolio.goatcounter.com/counter/bigv-portfolio/gallery/.html?no_branding=true&style=div%7Bbackground%3Ablack%3Bcolor%3Asandybrown%3Bborder%3Anone%7D%23gcvc-for%2C%23gcvc-views%7Bcolor%3Asandybrown%3B%7D][Gallery page views]] |

Build of a static website based on =clojure=:
- =.html=: [[file:src/clj/][clojure]] to generate the static stuff, evaluating the [[file:data/][csv]] data and baking it into the window property
- =.js=: [[file:src/cljs/][clojurescript]] for stuff like gallery interactivity, that will use the =#id= tags in the =html= to manipulate state and properties
- =.css=: [[file:src/css/input.css][tailwind]] and =daisyuo= to inject nice =css= props and build a minified =css= file
- [[file:resources/public/assets/][Assets]]: some will be served by the site, other [[file:src/python/gsync.py][fetched from google]]

The build script populate the [[file:resources/public/][public]] folder that can be served statically.

* Running
** Prepare the [[*CSV files][CSV files]]
| *File*           | *Description*                                                               |
|------------------+-----------------------------------------------------------------------------|
| [[file:data/highlights.csv][highlights.csv]] | Big events, newest at top                                                   |
| [[file:data/game_stats.csv][game_stats.csv]] | Game by game stats                                                          |
| [[file:data/time_log.csv][time_log.csv]]   | Cumulative ice time per season                                              |
| [[file:data/gallery.csv][gallery.csv]]    | All of the photos. *Note - these are generated by the python script below!* |
|                  |                                                                             |

** Upload photos
1. Setup google if not setup (see below)
2. Create a folder (folders) with the following season structure
#+begin_text
highlights/
├── 2021-2022
├── 2022-2023
├── 2023-2024
└── 2024-2025
#+end_text

3. [@3] Create the =.env= file of following format. =MEDIA_PATHS= for the folders you created should be delimited with =:=
#+begin_src text
GOOGLE_SECRETS_FILE = XXXX.json
GOOGLE_FOLDER = XXXX
MEDIA_PATHS=/folder-1:/folder-path/folder-2
#+end_src

** Building
1. Install node and python dependencies
#+begin_src shell
npm i && python install -r
#+end_src

2. [@2] Run a dev (with live reload) or build scripts
#+begin_src shell
npm run dev # for development build with watching
npm run build # for production build
#+end_src

3. [@3] Preview (if not already running) and publish
#+begin_src shell
npm run preview
npm run publish # to push to github pages
#+end_src

* Generating hashes for external js
#+begin_src shell
curl -sSL https://cdn.jsdelivr.net/npm/chart.js@4.5.0/dist/chart.umd.min.js \
  | openssl dgst -sha384 -binary \
  | openssl base64 -A \
  | awk '{print "sha384-" $0}'
#+end_src
* Tips and tricks
** =.cljs=
*** Name mangling
As the =cljs= files are compiled and minified with the =cljs= compiler, variable names can be mangled. For most common =js= DOM operations e.g. =document.language= etc there are export names that prevent mangling.

But for custom libraries e.g. =chartjs=, internal variable names, that the =chartjs.min.js= downloaded from the server expects, get malformed. As such, ensure that you use =aget= instead of =-.PROP= to access fields

#+begin_src clojure
-                   (let [idx   (js/parseInt (.-dataIndex item))
+                   (let [idx   (js/parseInt (aget item "dataIndex"))
#+end_src

*** Compiling
- The =cljs= compiler does a good job at slimming the build and can be used as is.
- I looked at using it to create an intermediate output and then using =rollup= to bundle and trim further: commit 2917629
- It seemed to be worse as per table below as it did not group common things

| =cljs=                           | =gallery.js=       | 2.55k |
|                                  | =landing.js=       | 7.46k |
|                                  | =cljs_base.js=     | 98.7k |
|                                  | =chart.umd.min.js= | 203k  |
|----------------------------------+--------------------+-------|
| =cljs + rollup=                  | =gallery.js=       | 92.9k |
|                                  | =landing.js=       | 103k  |
|                                  | =chart.umd.min.js= | 203k  |

* Google setup
1. Go to [[https://console.cloud.google.com/][Google Cloud]] and create a new project
2. Go to Go to [[https://console.cloud.google.com/apis/dashboard?authuser=6&inv=1&invt=Ab2i1A&project=hockey-portfolio][APIs & Services > Library]] and enable the *Google Drive API*
3. [[https://console.cloud.google.com/auth/clients/create?previousPage=%2Fapis%2Fcredentials%3Fauthuser%3D6%26inv%3D1%26invt%3DAb2rWA%26project%3Dhockey-portfolio&authuser=6&inv=1&invt=Ab2rWA&project=hockey-portfolio][Create client OAuth client ID]] for *External User* and *Desktop App*. Add email to test users and don't spam it!
4. Download json and store locally, setting it in =GOOGLE_SECRETS_FILE= in =.env=
5. Create the =GOOGLE_FOLDER= and give it public access
